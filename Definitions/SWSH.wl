(* ::Package:: *)

\[ScriptH][l_] := ((l^2 - (kp + km)^2)*(l^2 - (kp - km)^2)*(l^2 - s^2))/
     (2*(l^2 - 1/4)*l^3)
 


LeaverCoef = {\[Alpha][p_] -> -2*(1 + p)*(1 + 2*km + p), 
     \[Beta][p_] -> -A - c^2 + (km + kp + p - s)*(1 + km + kp + p + s) - 
       2*c*(1 + 2*km + 2*p + s), \[Gamma][p_] -> 2*c*(km + kp + p + s)}
 


EigenCoef = {l + l^2 - s*(1 + s), (-2*m*s^2)/(l*(1 + l)), 
     -1 - ((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(l^2 - s^2))/
       (2*l^3*(-1/4 + l^2)) + ((-(-km + kp)^2 + (1 + l)^2)*
        (-(km + kp)^2 + (1 + l)^2)*((1 + l)^2 - s^2))/
       (2*(1 + l)^3*(-1/4 + (1 + l)^2)), 
     ((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*m*s^2*(l^2 - s^2))/
       ((-1 + l)*l^5*(1 + l)*(-1/4 + l^2)) - 
      ((-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*m*s^2*
        ((1 + l)^2 - s^2))/(l*(1 + l)^5*(2 + l)*(-1/4 + (1 + l)^2)), 
     ((-(-km + kp)^2 + (-1 + l)^2)*(-(km + kp)^2 + (-1 + l)^2)*
        (-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*((-1 + l)^2 - s^2)*
        (l^2 - s^2))/(8*(-1/4 + (-1 + l)^2)*(-1 + l)^2*l^4*(-1 + 2*l)*
        (-1/4 + l^2)) - ((-(-km + kp)^2 + l^2)^2*(-(km + kp)^2 + l^2)^2*
        (l^2 - s^2)^2)/(8*l^7*(-1/4 + l^2)^2) + 
      ((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(-(-km + kp)^2 + (1 + l)^2)*
        (-(km + kp)^2 + (1 + l)^2)*(l^2 - s^2)*((1 + l)^2 - s^2))/
       (8*l^4*(1 + l)^4*(-1/4 + l^2)*(-1/4 + (1 + l)^2)) + 
      ((-(-km + kp)^2 + (1 + l)^2)^2*(-(km + kp)^2 + (1 + l)^2)^2*
        ((1 + l)^2 - s^2)^2)/(8*(1 + l)^7*(-1/4 + (1 + l)^2)^2) - 
      ((-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*
        (-(-km + kp)^2 + (2 + l)^2)*(-(km + kp)^2 + (2 + l)^2)*
        ((1 + l)^2 - s^2)*((2 + l)^2 - s^2))/(8*(1 + l)^4*(2 + l)^2*(3 + 2*l)*
        (-1/4 + (1 + l)^2)*(-1/4 + (2 + l)^2)) + 
      m^2*s^4*((-2*(-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(l^2 - s^2))/
         ((-1 + l)^2*l^7*(1 + l)^2*(-1/4 + l^2)) + 
        (2*(-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*
          ((1 + l)^2 - s^2))/(l^2*(1 + l)^7*(2 + l)^2*(-1/4 + (1 + l)^2))), 
     m^3*s^6*((4*(-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(l^2 - s^2))/
         ((-1 + l)^3*l^9*(1 + l)^3*(-1/4 + l^2)) - 
        (4*(-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*
          ((1 + l)^2 - s^2))/(l^3*(1 + l)^9*(2 + l)^3*(-1/4 + (1 + l)^2))) + 
      ((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*m*s^2*(l^2 - s^2)*
        (-((-(-km + kp)^2 + (-1 + l)^2)*(-(km + kp)^2 + (-1 + l)^2)*
            (-4 + 3*l)*((-1 + l)^2 - s^2))/(2*(-1/4 + (-1 + l)^2)*(-2 + l)*
           (-1 + l)^3*l^3*(1 + l)*(-1 + 2*l)) - 
         ((4 + 7*l + 7*l^2)*(-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + 
            (1 + l)^2)*((1 + l)^2 - s^2))/(2*(-1 + l)*l^3*(1 + l)^6*(2 + l)*
           (-1/4 + (1 + l)^2))))/(2*l^3*(-1/4 + l^2)) + 
      m*s^2*((3*(-(-km + kp)^2 + l^2)^2*(-(km + kp)^2 + l^2)^2*(l^2 - s^2)^2)/
         (4*(-1 + l)*l^9*(1 + l)*(-1/4 + l^2)^2) - 
        (3*(-(-km + kp)^2 + (1 + l)^2)^2*(-(km + kp)^2 + (1 + l)^2)^2*
          ((1 + l)^2 - s^2)^2)/(4*l*(1 + l)^9*(2 + l)*(-1/4 + (1 + l)^2)^2) + 
        ((7 + 3*l)*(-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*
          (-(-km + kp)^2 + (2 + l)^2)*(-(km + kp)^2 + (2 + l)^2)*
          ((1 + l)^2 - s^2)*((2 + l)^2 - s^2))/(4*l*(1 + l)^6*(2 + l)^3*
          (3 + l)*(3 + 2*l)*(-1/4 + (1 + l)^2)*(-1/4 + (2 + l)^2))), 
     -((-(-km + kp)^2 + l^2)^3*(-(km + kp)^2 + l^2)^3*(l^2 - s^2)^3)/
       (16*l^11*(-1/4 + l^2)^3) + ((-(-km + kp)^2 + (1 + l)^2)^3*
        (-(km + kp)^2 + (1 + l)^2)^3*((1 + l)^2 - s^2)^3)/
       (16*(1 + l)^11*(-1/4 + (1 + l)^2)^3) + 
      ((-(-km + kp)^2 + (-1 + l)^2)*(-(km + kp)^2 + (-1 + l)^2)*
        (-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*((-1 + l)^2 - s^2)*
        (l^2 - s^2)*(-((-(-km + kp)^2 + (-2 + l)^2)*(-(km + kp)^2 + 
             (-2 + l)^2)*l*((-2 + l)^2 - s^2))/(6*(-1/4 + (-2 + l)^2)*
           (-2 + l)^2) - ((-(-km + kp)^2 + (-1 + l)^2)*(-(km + kp)^2 + 
            (-1 + l)^2)*((-1 + l)^2 - s^2))/(2*(-1/4 + (-1 + l)^2)*
           (-1 + l)) + ((-1 + l)*(-3 + 7*l)*(-(-km + kp)^2 + l^2)*
           (-(km + kp)^2 + l^2)*(l^2 - s^2))/(2*l^3*(-1/4 + l^2))))/
       (16*(-1/4 + (-1 + l)^2)*(-1 + l)^3*l^5*(-1 + 2*l)^2*(-1/4 + l^2)) + 
      (16*m^4*s^8*(-((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(l^2 - s^2))/
          (2*(-1 + l)^4*l^7*(-1/4 + l^2)) + ((-(-km + kp)^2 + (1 + l)^2)*
           (-(km + kp)^2 + (1 + l)^2)*((1 + l)^2 - s^2))/
          (2*(1 + l)^7*(2 + l)^4*(-1/4 + (1 + l)^2))))/(l^4*(1 + l)^4) + 
      ((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(-(-km + kp)^2 + (1 + l)^2)*
        (-(km + kp)^2 + (1 + l)^2)*(l^2 - s^2)*((1 + l)^2 - s^2)*
        (-((-(-km + kp)^2 + (-1 + l)^2)*(-(km + kp)^2 + (-1 + l)^2)*
            (-1 + l^2)*(-2 + 4*l + 3*l^2)*((-1 + l)^2 - s^2))/
          (2*(-1/4 + (-1 + l)^2)*(-1 + l)^3*(-1 + 2*l)^2) + 
         ((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(3 + 4*l + 2*l^2)*
           (l^2 - s^2))/(2*l^3*(-1/4 + l^2)) - 
         ((1 + 2*l^2)*(-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*
           ((1 + l)^2 - s^2))/(2*(1 + l)^3*(-1/4 + (1 + l)^2))))/
       (16*l^5*(1 + l)^5*(-1/4 + l^2)*(-1/4 + (1 + l)^2)) + 
      (4*m^2*s^4*(((-(-km + kp)^2 + (-1 + l)^2)*(-(km + kp)^2 + (-1 + l)^2)*
           (-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*(6 - 8*l + 3*l^2)*
           ((-1 + l)^2 - s^2)*(l^2 - s^2))/(4*(-1/4 + (-1 + l)^2)*(-2 + l)^2*
           (-1 + l)^4*l^6*(-1 + 2*l)*(-1/4 + l^2)) - 
         (3*(-(-km + kp)^2 + l^2)^2*(-(km + kp)^2 + l^2)^2*(l^2 - s^2)^2)/
          (4*(-1 + l)^2*l^9*(-1/4 + l^2)^2) + ((-(-km + kp)^2 + l^2)*
           (-(km + kp)^2 + l^2)*(6 + 20*l + 31*l^2 + 22*l^3 + 11*l^4)*
           (-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*(l^2 - s^2)*
           ((1 + l)^2 - s^2))/(4*l^3*(1 + l)^6*(2 + l)*(3 + l)^2*(3 + 2*l)*
           (-1/4 + l^2)*(-1/4 + (1 + l)^2)) + 
         (3*(-(-km + kp)^2 + (1 + l)^2)^2*(-(km + kp)^2 + (1 + l)^2)^2*
           ((1 + l)^2 - s^2)^2)/(4*(1 + l)^9*(2 + l)^2*(-1/4 + (1 + l)^2)^
            2) - ((17 + 14*l + 3*l^2)*(-(-km + kp)^2 + (1 + l)^2)*
           (-(km + kp)^2 + (1 + l)^2)*(-(-km + kp)^2 + (2 + l)^2)*
           (-(km + kp)^2 + (2 + l)^2)*((1 + l)^2 - s^2)*((2 + l)^2 - s^2))/
          (4*(1 + l)^6*(2 + l)^4*(3 + l)^2*(3 + 2*l)*(-1/4 + (1 + l)^2)*
           (-1/4 + (2 + l)^2))))/(l^2*(1 + l)^2) + 
      ((-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^2)*
        (-(-km + kp)^2 + (2 + l)^2)*(-(km + kp)^2 + (2 + l)^2)*
        ((1 + l)^2 - s^2)*((2 + l)^2 - s^2)*
        (((-(-km + kp)^2 + (3 + l)^2)*(-(km + kp)^2 + (3 + l)^2)*
           ((3 + l)^2 - s^2))/(6*(3 + l)^2*(-1/4 + (3 + l)^2)) + 
         ((2 + l)*(((-(-km + kp)^2 + l^2)*(-(km + kp)^2 + l^2)*
              (-3 + 2*l + 3*l^2)*(l^2 - s^2))/(2*l^4*(-1/4 + l^2)) - 
            ((10 + 7*l)*(-(-km + kp)^2 + (1 + l)^2)*(-(km + kp)^2 + (1 + l)^
                2)*((1 + l)^2 - s^2))/(2*(1 + l)^3*(-1/4 + (1 + l)^2)) + 
            ((-(-km + kp)^2 + (2 + l)^2)*(-(km + kp)^2 + (2 + l)^2)*
              ((2 + l)^2 - s^2))/(2*(2 + l)^2*(-1/4 + (2 + l)^2))))/(1 + l)))/
       (16*(1 + l)^4*(2 + l)^3*(3 + 2*l)^2*(-1/4 + (1 + l)^2)*
        (-1/4 + (2 + l)^2))}
 


Rule\[Kappa]pm = {kp -> Abs[m + s]/2, km -> Abs[-m + s]/2}
 


EigenLeaver[\[ScriptS]_Integer, (\[ScriptL]_Integer)?NonNegative, 
     \[ScriptM]_Integer, (\[ScriptC]_Real)?Negative, M_Integer:150] := 
    EigenLeaver[\[ScriptS], \[ScriptL], -\[ScriptM], -\[ScriptC], M]
 
EigenLeaver[(\[ScriptS]_Integer)?Negative, (\[ScriptL]_Integer)?NonNegative, 
     \[ScriptM]_Integer, \[ScriptC]_Real, M_Integer:150] := 
    EigenLeaver[-\[ScriptS], \[ScriptL], \[ScriptM], \[ScriptC], M]
 
EigenLeaver[\[ScriptS]_Integer, (\[ScriptL]_Integer)?NonNegative, 
      \[ScriptM]_Integer, \[ScriptC]_Real, M_Integer:150] /; 
     \[ScriptL] >= Max[Abs[\[ScriptS]], Abs[\[ScriptM]]] := 
    \[ScriptS]*(\[ScriptS] + 1) + A /. 
     Quiet[FindRoot[Fold[\[Beta][#2 - 1] - (\[Alpha][#2 - 1]*\[Gamma][#2])/
            #1 & , 1, Reverse[Range[M]]] /. (LeaverCoef /. Rule\[Kappa]pm /. 
         {m -> \[ScriptM], l -> \[ScriptL], s -> \[ScriptS], 
          c -> \[ScriptC]}), {A, Table[c^(i - 1), {i, Length[EigenCoef]}] . 
          Simplify[EigenCoef /. Rule\[Kappa]pm /. {m -> \[ScriptM], 
             s -> \[ScriptS]}] /. {l -> \[ScriptL], c -> \[ScriptC]}}]]


Clear@SpinWeightedSphericalHarmonicsY;
SpinWeightedSphericalHarmonicsY[s_,\[ScriptL]_,m_]:=Function[{\[Theta],\[Phi]},SpinWeightedSphericalHarmonicsY[s,\[ScriptL],m,\[Theta],\[Phi]]];
SpinWeightedSphericalHarmonicsY[s_,\[ScriptL]_,m_,\[Theta]_,\[Phi]_]:=(-1)^(m+\[ScriptL]-s) Sqrt[((1+2 \[ScriptL]) (-m+\[ScriptL])! (m+\[ScriptL])!)/(4 \[Pi] (-s+\[ScriptL])! (s+\[ScriptL])!)] Sin[\[Theta]/2]^(2 \[ScriptL]) Sum[ (-1)^-r E^(I m \[Phi]) Binomial[-s+\[ScriptL],r] Binomial[s+\[ScriptL],-m+r+s] Cot[\[Theta]/2]^(-m+2 r+s),{r,0,-s+\[ScriptL]}];
